<?php

namespace StarkInfra;
use StarkInfra\Utils\Resource;
use StarkInfra\Utils\Checks;
use StarkInfra\Utils\Rest;


class PixBalance extends Resource
{
    /**
    # PixBalance object

    The PixBalance object displays the current balance of the workspace,
    which is the result of the sum of all transactions within this
    workspace. The balance is never generated by the user, but it
    can be retrieved to see the information available.

    ## Attributes (return-only):
        - id [string]: unique id returned when Balance is created. ex: "5656565656565656"
        - amount [integer]: current pixBalance amount of the workspace in cents. ex: 200 (= R$ 2.00)
        - currency [string]: currency of the current workspace. Expect others to be added eventually. ex: "BRL"
        - updated [DateTime]: update datetime for the pixBalance. 
     */
    function __construct(array $params)
    {
        parent::__construct($params);
        
        $this-> amount = Checks::checkParam($params, "amount");
        $this-> currency = Checks::checkParam($params, "currency");
        $this-> updated = Checks::checkDateTime(Checks::checkParam($params, "updated"));

        Checks::checkParams($params);
    }

    /**
    # Retrieve the PixBalance object

    Receive the PixBalance object linked to your workspace in the Stark Infra API

    ## Parameters (optional):
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - Balance object with updated attributes
     */
    public static function get($user = null)
    {
        return Rest::getList($user, PixBalance::resource())->current();
    }

    private static function resource()
    {
        $balance = function ($array) {
            return new PixBalance($array);
        };
        return [
            "name" => "PixBalance",
            "maker" => $balance,
        ];
    }
}
