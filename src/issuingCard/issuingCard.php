<?php

namespace StarkInfra;
use StarkInfra\Utils\Resource;
use StarkInfra\Utils\Checks;
use StarkInfra\Utils\Rest;
use StarkInfra\Utils\StarkDate;


class IssuingCard extends Resource
{
    /**
    # IssuingCard object

    The IssuingCard object displays the informations of Cards created to your Workspace.

    ## Parameters (required):
        - holderName [string]: card holder name. ex: "Tony Stark"
        - holderTaxId [string]: card holder tax ID. ex: "012.345.678-90"
        - holderExternalId [string] card holder unique id, generated by the user to avoid duplicated holders. ex: "my-entity/123"

    ## Parameters (optional):
        - displayName [string, default null]: card displayed name. ex: "ANTHONY STARK"
        - rules [list of IssuingRule, default null]: [EXPANDABLE] list of card spending rules.
        - binId [string, default null]: BIN ID to which the card is bound. ex: "53810200"
        - tags [list of strings]: list of strings for tagging. ex: ["travel", "food"]
        - streetLine1 [string, default null]: card holder main address. ex: "Av. Paulista, 200"
        - streetLine2 [string, default null]: card holder address complement. ex: "Apto. 123"
        - district [string]: card holder address district / neighbourhood. ex: "Bela Vista"
        - city [string, default null]: card holder address city. ex: "Rio de Janeiro"
        - stateCode [string, default null]: card holder address state. ex: "GO"
        - zipCode [string, null]: card holder address zip code. ex: "01311-200"

    ## Attributes (return-only):
        - id [string, default null]: unique id returned when IssuingCard is created. ex: "5656565656565656"
        - holderId [string, default null]: card holder unique id. ex: "5656565656565656"
        - type [string, default null]: card type. ex: "virtual"
        - status [string, default null]: current IssuingCard status. ex: "canceled" or "active"
        - number [string, default null]: [EXPANDABLE] masked card number. ex: "1234 5678 1234 5678"
        - securityCode [string, default null]: [EXPANDABLE] masked card verification value (cvv). Expand to unmask the value. ex: "123".
        - expiration [string, default null]: [EXPANDABLE] masked card expiration datetime. ex: datetime.datetime(2020, 3, 10, 10, 30, 0, 0)
        - created [string, default null]: creation datetime for the IssuingCard. ex: "2020-03-10 10:30:00.000"
        - updated [string, default null]: latest update datetime for the IssuingCard. ex: "2020-03-10 10:30:00.000"
     */
    function __construct(array $params)
    {
        parent::__construct($params);

        $this->holderName = Checks::checkParam($params, "holderName");
        $this->holderTaxId = Checks::checkParam($params, "holderTaxId");
        $this->holderExternalId = Checks::checkParam($params, "holderExternalId");
        $this->displayName = Checks::checkParam($params, "displayName");
        $this->rules = Checks::checkParam($params, "rules");
        $this->binId = Checks::checkParam($params, "binId");
        $this->tags = Checks::checkParam($params, "tags");
        $this->streetLine1 = Checks::checkParam($params, "streetLine1");
        $this->streetLine2 = Checks::checkParam($params, "streetLine2");
        $this->district = Checks::checkParam($params, "district");
        $this->city = Checks::checkParam($params, "city");
        $this->stateCode = Checks::checkParam($params, "stateCode");
        $this->zipCode = Checks::checkParam($params, "zipCode");
        $this->holderId = Checks::checkParam($params, "holderId");
        $this->type = Checks::checkParam($params, "type");
        $this->status = Checks::checkParam($params, "status");
        $this->number = Checks::checkParam($params, "number");
        $this->securityCode = Checks::checkParam($params, "securityCode");
        $this->expiration = Checks::checkParam($params, "expiration");
        $this->created = Checks::checkDateTime(Checks::checkParam($params, "created"));
        $this->updated = Checks::checkDateTime(Checks::checkParam($params, "updated"));

        Checks::checkParams($params);
    }

    /**
    # Create IssuingCards

    Send a list of IssuingCard objects for creation in the Stark Infra API

    ## Parameters (required):
        - cards [list of IssuingCard objects]: list of IssuingCard objects to be created in the API

    ## Parameters (optional):
        - expand [list of strings, default []]: fields to to expand information. ex: ["rules", "securityCode", "number", "expiration"]
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - list of IssuingCard objects with updated attributes
     */
    public static function create($cards, $expand = null, $user = null)
    {
        $query = is_null($expand) ? [] : ["expand" => $expand];
        return Rest::post($user, IssuingCard::resource(), $cards, $query);
    }

    /**
    # Retrieve IssuingCards

    Receive an enumerator of IssuingCards objects previously created in the Stark Infra API

    ## Parameters (optional):
        - status [string, default null]: filter for status of retrieved objects. ex: "paid" or "registered"
        - types [string, default null]: card type. ex: "virtual"
        - holderIds [list of strings]: card holder IDs. ex: ["5656565656565656", "4545454545454545"]
        - after [datetime.date or string, default null] date filter for objects created only after specified date. ex: datetime.date(2020, 3, 10)
        - before [datetime.date or string, default null] date filter for objects created only before specified date. ex: datetime.date(2020, 3, 10)
        - tags [list of strings, default null]: tags to filter retrieved objects. ex: ["tony", "stark"]
        - ids [list of strings, default null]: list of ids to filter retrieved objects. ex: ["5656565656565656", "4545454545454545"]
        - limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35
        - expand [list of strings, default []]: fields to to expand information. ex: ["rules", "securityCode", "number", "expiration"]
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - enumerator of IssuingCards objects with updated attributes
     */
    public static function query($options = [], $user = null)
    {
        $options["after"] = new StarkDate(Checks::checkParam($options, "after"));
        $options["before"] = new StarkDate(Checks::checkParam($options, "before"));

        return Rest::getList($user, IssuingCard::resource(), $options);
    }

    /**
    # Retrieve paged IssuingCards

    Receive a list of IssuingCards objects previously created in the Stark Infra API and the cursor to the next page.

    ## Parameters (optional):
        - cursor [string, default null]: cursor returned on the previous page function call
        - status [string, default null]: filter for status of retrieved objects. ex: "paid" or "registered"
        - types [string, default null]: card type. ex: "virtual"
        - holderIds [list of strings]: card holder IDs. ex: ["5656565656565656", "4545454545454545"]
        - after [datetime.date or string, default null] date filter for objects created only after specified date. ex: datetime.date(2020, 3, 10)
        - before [datetime.date or string, default null] date filter for objects created only before specified date. ex: datetime.date(2020, 3, 10)
        - tags [list of strings, default null]: tags to filter retrieved objects. ex: ["tony", "stark"]
        - ids [list of strings, default null]: list of ids to filter retrieved objects. ex: ["5656565656565656", "4545454545454545"]
        - limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35
        - expand [list of strings, default []]: fields to to expand information. ex: ["rules", "securityCode", "number", "expiration"]
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call
    
    ## Return:
        - list of IssuingCards objects with updated attributes
        - cursor to retrieve the next page of IssuingCards objects
     */
    public static function page($options = [], $user = null)
    {
        return Rest::getPage($user, IssuingCard::resource(), $options);
    }

    /**
    # Retrieve a specific IssuingCard

    Receive a single IssuingCards object previously created in the Stark Infra API by its id

    ## Parameters (required):
        - id [string]: object unique id. ex: "5656565656565656"

    ## Parameters (optional):
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - IssuingCards object with updated attributes
     */
    public static function get($id, $user = null)
    {
        return Rest::getId($user, IssuingCard::resource(), $id);
    }

    /**
    # Update IssuingCard entity

    Update an IssuingCard by passing id.

    ## Parameters (required):
        - id [string]: IssuingCard id. ex: "5656565656565656"

    ## Parameters (optional):
        - status [string]: You may block the IssuingCard by passing 'blocked' in the status
        - displayName [string, default null]: card displayed name
        - rules [list of dictionaries, default null]: list of dictionaries with "amount": int, "currencyCode": string, "id": string, "interval": string, "name": string pairs.
        - tags [list of strings]: list of strings for tagging
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - target IssuingCard with updated attributes
     */
    public static function update($id, $options = [], $user = null)
    {
        return Rest::patchId($user, IssuingCard::resource(), $id, $options);
    }


    /**
    # Delete a IssuingCard entity

    Delete a IssuingCard entity previously created in the Stark Infra API

    ## Parameters (required):
        - id [string]: IssuingCard unique id. ex: "5656565656565656"
    
    ## Parameters (optional):
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call
    
    ## Return:
        - deleted IssuingCard object
     */
    public static function delete($id, $user = null)
    {
        return Rest::deleteId($user, IssuingCard::resource(), $id);
    }

    private static function resource()
    {
        $card = function ($array) {
            return new IssuingCard($array);
        };
        return [
            "name" => "IssuingCard",
            "maker" => $card,
        ];
    }
}
